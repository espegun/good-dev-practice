venv

Purpose
-------
Programmer kan ha behov for spesielle versjoner av pakker, og disse versjonene kan være forskjellig for programmer. 
Å ha klar kontroll på pakkeversjonen gir også reproduserbarhet.
Det er MANGE kilder til konflikter og ukonsistens, venvs gir ordens og reproduserbarhet.

How it works
------------
Virtuelle environments er i praksis et directory som inneholder spesifikasjoner for et python prosjekt. Den overstyrer
PATH, altså hvor den skal lete etter interpreter og pakker.

python -m venv projectName  # Initi



Useful links and tutorials
--------------------------
https://docs.python.org/3/library/venv.html
https://medium.com/@peterchang_82818/python3-beginner-must-know-venv-fdbbd0421405
https://medium.com/swlh/a-guide-to-python-virtual-environments-8af34aa106ac <-- DENNE. LINUX-BASERT, MEN SVÆRT BRA.


WORK THROUGH THIS!!!!
All commands below in the Win Command Line.

Normally, create a folder named "venv" in the project folder. Use whenever "project_venv" is used below.

The venv should not be committed to source control, but the requirements.txt file should.

pip list <-- Check installations, in system OR for the venv after activating it
python -m venv project_venv <-- Creates a separate virtual environment 
project_venv\Scripts\activate.bat <-- Activates the venv
where python <-- Lists which python installation is running and which venv

requirements.txt <-- Use to specify which packages should be used, for someone else to copy.
pip freeze > requirements.txt  <-- Write to the requirements file (or just pip freeze and copy-paste)
pip install -r requirements.txt  <-- Install according to the content here 

deactivate <-- Deactivates the venv
rm project_name /s <-- Remove the venv simply by removing the folder.
